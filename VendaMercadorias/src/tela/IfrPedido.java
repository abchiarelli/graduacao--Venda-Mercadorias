/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tela;

import apoio.Automatizar;
import apoio.ComboItem;
import apoio.CombosDAO;
import apoio.Formatacao;
import apoio.IItemPesquisa;
import dao.ItemPedidoDAO;
import dao.CidadeDAO;
import dao.ClienteDAO;
import dao.PedidoDAO;
import dao.ProdutoDAO;
import entidade.Cliente;
import entidade.ItemPedido;
import entidade.Pedido;
import entidade.Produto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author artur
 */
public class IfrPedido extends javax.swing.JInternalFrame implements IItemPesquisa {

    private Cliente cliente = null;
    private Produto produto = null;

    private int idPedido = 0;
    private double valor = 0.00;

    private ArrayList<ItemPedido> listaProdutos = new ArrayList<>();

    private ArrayList<Pedido> pedidos = new ArrayList<>();

    private Pedido pedidoSelecionado = null;

    /**
     * Creates new form IfrPedido
     */
    public IfrPedido() {
        initComponents();

        Formatacao.formatarData(tffDataPedido);
        tffDataPedido.setText(Formatacao.getDataAtual());
        btnSelecionarCliente.requestFocus();

        Formatacao.formatarData(tffDataDe);
        Formatacao.formatarData(tffDataAte);

        popularTabelaPedidos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbpPrincipal = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPedidos = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        tffDataDe = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        tffDataAte = new javax.swing.JFormattedTextField();
        btnLimparFiltros = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfdNumPedido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tffDataPedido = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        tfdClienteNome = new javax.swing.JTextField();
        btnSelecionarCliente = new javax.swing.JButton();
        btnCriarPedido = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tfdEndereco = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmbCidade = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        tfdProduto = new javax.swing.JTextField();
        btnSelecionarProduto = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tfdQuantidade = new javax.swing.JTextField();
        btnAdicionarItem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItensCadastrados = new javax.swing.JTable();
        btnRemover = new javax.swing.JButton();
        tfdValorTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfdObservacao = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tfdValorProduto = new javax.swing.JTextField();
        btnEditarEndereco = new javax.swing.JButton();
        btnSalvarPedido = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        tbpPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbpPrincipalMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel13.setText("Pedidos Cadastrados");

        tblPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPedidosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPedidos);

        jLabel11.setText("Data De:");

        jLabel12.setText("Data Até:");

        btnLimparFiltros.setText("Limpar");
        btnLimparFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparFiltrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tffDataDe, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tffDataAte, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimparFiltros)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tffDataDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(tffDataAte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimparFiltros))
                .addContainerGap(164, Short.MAX_VALUE))
        );

        tbpPrincipal.addTab("Listagem", jPanel1);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel1.setText("Pedido Nº:");

        tfdNumPedido.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setText("Data:");

        jLabel2.setText("Cliente:");

        tfdClienteNome.setEnabled(false);

        btnSelecionarCliente.setText("Selecionar");
        btnSelecionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarClienteActionPerformed(evt);
            }
        });

        btnCriarPedido.setText("Criar Pedido");
        btnCriarPedido.setEnabled(false);
        btnCriarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarPedidoActionPerformed(evt);
            }
        });

        jLabel6.setText("Endereço entrega:");

        tfdEndereco.setEnabled(false);

        jLabel7.setText("Cidade:");

        cmbCidade.setEnabled(false);

        jLabel3.setText("Produto:");

        tfdProduto.setEnabled(false);

        btnSelecionarProduto.setText("Selecionar");
        btnSelecionarProduto.setEnabled(false);
        btnSelecionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarProdutoActionPerformed(evt);
            }
        });

        jLabel4.setText("Quantidade:");

        tfdQuantidade.setEnabled(false);

        btnAdicionarItem.setText("Adicionar Item");
        btnAdicionarItem.setEnabled(false);
        btnAdicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItemActionPerformed(evt);
            }
        });

        tblItensCadastrados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItensCadastradosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItensCadastrados);

        btnRemover.setText("Remover Selecionado");
        btnRemover.setEnabled(false);
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        tfdValorTotal.setEnabled(false);

        jLabel8.setText("Total:");

        jLabel9.setText("Observação:");

        tfdObservacao.setEnabled(false);

        jLabel10.setText("Valor:");

        tfdValorProduto.setEnabled(false);

        btnEditarEndereco.setText("Editar");
        btnEditarEndereco.setEnabled(false);
        btnEditarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEnderecoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tffDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tfdClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSelecionarCliente))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(cmbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnEditarEndereco))
                                .addComponent(tfdEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnCriarPedido)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfdValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnAdicionarItem))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tfdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnSelecionarProduto)))
                            .addComponent(btnRemover)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfdNumPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(tffDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfdClienteNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfdEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditarEndereco))
                .addGap(18, 18, 18)
                .addComponent(btnCriarPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarItem)
                    .addComponent(jLabel10)
                    .addComponent(tfdValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfdValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfdObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        tbpPrincipal.addTab("Manutenção", jPanel2);

        btnSalvarPedido.setText("Salvar Pedido");
        btnSalvarPedido.setEnabled(false);
        btnSalvarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPedidoActionPerformed(evt);
            }
        });

        btnCancelar.setText("Fechar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpPrincipal)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvarPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarPedido)
                    .addComponent(btnCancelar)
                    .addComponent(btnBuscar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if (pedidoSelecionado == null) {
            if (idPedido != 0) {
                if (JOptionPane.showConfirmDialog(this, "Fechar irá excluir o pedido em andamento.\n\nRealmente deseja continuar?\n", "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
                    if (new PedidoDAO().excluir(idPedido) == null) {
                        JOptionPane.showMessageDialog(this, "Pedido em andamento excluído!");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, Formatacao.mensagemExclusaoError("Pedido"));
                    }
                }
            } else {
                this.dispose();
            }
        } else {
            if (JOptionPane.showConfirmDialog(this, "Fechar não salvará as alterações feitas no pedido.\n\nRealmente deseja continuar?\n", "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSelecionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarClienteActionPerformed
        DlgLocalizar dlgPedido = new DlgLocalizar(null, true, this, "cliente");
        dlgPedido.setVisible(true);
    }//GEN-LAST:event_btnSelecionarClienteActionPerformed

    private void btnSelecionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarProdutoActionPerformed
        DlgLocalizar dlgProduto = new DlgLocalizar(null, true, this, "produto");
        dlgProduto.setVisible(true);
    }//GEN-LAST:event_btnSelecionarProdutoActionPerformed

    private void btnCriarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarPedidoActionPerformed
        if (Automatizar.data(tffDataPedido, false) 
                || Automatizar.comboBox(cmbCidade, false)
                || Automatizar.nome(tfdEndereco, false)) {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            ComboItem tempItem = (ComboItem) cmbCidade.getSelectedItem();
            String data = tffDataPedido.getText();
            String endereco = tfdEndereco.getText();
            Pedido pedido = new Pedido(data, endereco, "", cliente.getId(), valor, tempItem.getId());

            String codPedido = new PedidoDAO().salvar(pedido);

            if (codPedido.contains("ERROR")) {
                JOptionPane.showMessageDialog(this, "Erro ao criar pedido!");
            } else {
                idPedido = Integer.parseInt(codPedido);

                tfdNumPedido.setText(codPedido);

                btnCriarPedido.setEnabled(false);

                btnSelecionarProduto.setEnabled(true);
                tfdObservacao.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnCriarPedidoActionPerformed

    private void btnAdicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItemActionPerformed
        if (Automatizar.valorDecimal(tfdQuantidade, false)) {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            double quantidade = Double.parseDouble(tfdQuantidade.getText().replace(',', '.'));
            Produto tempProduto = new ProdutoDAO().consultarId(produto.getId());
            if (tempProduto.getQuantidade() >= quantidade) {
                int indexCadastro = itemJaCadastrado(produto.getId());
                if (indexCadastro >= 0) {
                    ItemPedido tempItem = listaProdutos.get(indexCadastro);
                    tempItem.setQuantidade(tempItem.getQuantidade() + quantidade);
                    listaProdutos.set(indexCadastro, tempItem);
                    valor += tempItem.getValor() * quantidade;
                    tfdValorTotal.setText(Formatacao.formatarCasasDecimais(valor, 2).replace('.', ','));
                    popularTabelaItensPedido();
                    limparProduto();
                } else {
                    ItemPedido tempItem = new ItemPedido(idPedido, produto.getId(), produto.getValor(), quantidade);
                    listaProdutos.add(tempItem);
                    valor += Double.parseDouble(Formatacao.formatarCasasDecimais((tempItem.getValor() * tempItem.getQuantidade()), 2).replace(',', '.'));
                    tfdValorTotal.setText("R$ " + Formatacao.formatarCasasDecimais(valor, 2).replace('.', ','));
                    popularTabelaItensPedido();
                    limparProduto();
                }
            } else {
                tfdQuantidade.setBackground(Formatacao.colorError());
                JOptionPane.showMessageDialog(this, "Quantidade inserida ultrapassa estoque do produto.");
            }
        }

    }//GEN-LAST:event_btnAdicionarItemActionPerformed

    private void btnSalvarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPedidoActionPerformed
        if (Automatizar.data(tffDataPedido, false)
                || Automatizar.comboBox(cmbCidade, false)
                || Automatizar.nome(tfdEndereco, false)) {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            if (pedidoSelecionado == null) {
                if (salvarLista() && finalizarPedido()) {
                    limparCadastro();
                    popularTabelaPedidos();
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemSalvarSucess("Pedido"));
                    tbpPrincipal.setSelectedIndex(0);
                    alterarBotoes();
                } else {
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemSalvarError("Pedido"));
                }
            } else {
                if (atualizarLista() && finalizarPedido()) {
                    limparCadastro();
                    popularTabelaPedidos();
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemAtualizarSucess("Pedido"));
                    tbpPrincipal.setSelectedIndex(0);
                    alterarBotoes();
                } else {
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemAtualizarError("Pedido"));
                }
            }
        }
    }//GEN-LAST:event_btnSalvarPedidoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        ItemPedido tempProduto = listaProdutos.get(tblItensCadastrados.getSelectedRow());
        listaProdutos.remove(tblItensCadastrados.getSelectedRow());
        valor -= Double.parseDouble(Formatacao.formatarCasasDecimais((tempProduto.getValor() * tempProduto.getQuantidade()), 2).replace(',', '.'));
        tfdValorTotal.setText(Formatacao.formatarCasasDecimais(valor, 2).replace('.', ','));
        popularTabelaItensPedido();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void tblItensCadastradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItensCadastradosMouseClicked
        btnRemover.setEnabled(tblItensCadastrados.getSelectedRow() >= 0);
    }//GEN-LAST:event_tblItensCadastradosMouseClicked

    private void tbpPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbpPrincipalMouseClicked
        switch (tbpPrincipal.getSelectedIndex()) {
            case 0:
                limparCadastro();
                break;
            case 1:
                alterarBotoesEditar(false);
                break;
        }

        alterarBotoes();
    }//GEN-LAST:event_tbpPrincipalMouseClicked

    private void tblPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPedidosMouseClicked
        alterarBotoesEditar(tblPedidos.getSelectedRow() >= 0);
    }//GEN-LAST:event_tblPedidosMouseClicked

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        popularTabelaPedidos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        pedidoSelecionado = pedidos.get(tblPedidos.getSelectedRow());
        cliente = new ClienteDAO().consultarId(pedidoSelecionado.getIdCliente());
        idPedido = pedidoSelecionado.getId();
        valor = pedidoSelecionado.getValorTotal();

        listaProdutos = new ItemPedidoDAO().consultarTodos(idPedido);

        tfdNumPedido.setText(String.valueOf(idPedido));
        tfdEndereco.setText(pedidoSelecionado.getEndereco());
        tfdClienteNome.setText(new ClienteDAO().consultarId(pedidoSelecionado.getIdCliente()).getNome());
        new CombosDAO().popularComboBox("cidade", cmbCidade);
        new CombosDAO().definirItemCombo(cmbCidade, pedidoSelecionado.getIdCidade());
        btnSelecionarCliente.setEnabled(true);
        btnCriarPedido.setEnabled(false);
        btnSelecionarProduto.setEnabled(true);

        popularTabelaItensPedido();

        tfdValorTotal.setText(Formatacao.formatarCasasDecimais(valor, 2).replace('.', ','));
        tfdObservacao.setText(pedidoSelecionado.getObservacao());
        tfdObservacao.setEnabled(true);
        
        alterarBotoesEditar(false);

        tbpPrincipal.setSelectedIndex(1);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        Pedido tempPedido = pedidos.get(tblPedidos.getSelectedRow());
        if (new ItemPedidoDAO().excluir(tempPedido.getId()) == null
                && new PedidoDAO().excluir(tempPedido.getId()) == null) {
            popularTabelaPedidos();
            JOptionPane.showMessageDialog(this, Formatacao.mensagemExclusaoSucess("Pedido"));
        } else {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemExclusaoError("Pedido"));
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparFiltrosActionPerformed
        tffDataDe.setText("");
        tffDataAte.setText("");
        popularTabelaPedidos();
    }//GEN-LAST:event_btnLimparFiltrosActionPerformed

    private void btnEditarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEnderecoActionPerformed
        tfdEndereco.setEnabled(true);
        cmbCidade.setEnabled(true);
    }//GEN-LAST:event_btnEditarEnderecoActionPerformed

    private void popularTabelaItensPedido() {
        Object[] cabecalho = {
            "Produto",
            "Valor",
            "QTD."
        };

        DefaultTableModel model = new DefaultTableModel(cabecalho, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (ItemPedido item : listaProdutos) {
            String tempProduto = new ProdutoDAO().consultarId(item.getIdProduto()).getDescricao();
            String tempValor = "R$ " + Formatacao.formatarCasasDecimais(item.getValor(), 2).replace('.', ',');
            String qtd = Formatacao.formatarCasasDecimais(item.getQuantidade(), 3).replace('.', ',');

            Object[] row = {
                tempProduto,
                tempValor,
                qtd
            };

            model.addRow(row);
        }

        tblItensCadastrados.setModel(model);
        tblItensCadastrados.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        btnAdicionarItem.setEnabled(false);
        btnSalvarPedido.setEnabled(tblItensCadastrados.getRowCount() > 0);
        btnRemover.setEnabled(tblItensCadastrados.getSelectedRow() >= 0);
    }

    private void limparCadastro() {
        cliente = null;
        produto = null;
        pedidoSelecionado = null;
        listaProdutos.clear();
        idPedido = 0;
        valor = 0.00;

        tfdClienteNome.setText("");
        tfdEndereco.setText("");
        cmbCidade.removeAllItems();

        tfdNumPedido.setText("");
        tffDataPedido.setText(Formatacao.getDataAtual());
        tffDataPedido.setBackground(Formatacao.colorNeutral());
        tfdObservacao.setText("");
        tfdProduto.setText("");
        tfdValorProduto.setText("");
        tfdQuantidade.setText("");
        tfdQuantidade.setBackground(Formatacao.colorNeutral());
        tfdValorTotal.setText("");

        limparTabelaItensPedido();
    }

    private void limparProduto() {
        produto = null;
        tfdProduto.setText("");
        tfdValorProduto.setText("");
        tfdQuantidade.setText("");
        tfdQuantidade.setBackground(Formatacao.colorNeutral());
        btnAdicionarItem.setEnabled(false);
    }

    private void alterarBotoes() {
        if (tbpPrincipal.getSelectedIndex() == 0) {
            btnSalvarPedido.setEnabled(false);
        }
        btnBuscar.setEnabled(tbpPrincipal.getSelectedIndex() == 0);
    }

    private void alterarBotoesEditar(boolean setTo) {
        btnEditar.setEnabled(setTo);
        btnExcluir.setEnabled(setTo);
    }

    private String criarFiltroPedidos() {
        String dml = "SELECT * FROM pedido WHERE id IS NOT NULL ";

        if (!tffDataDe.getText().trim().equals("/  /")) {
            String add = "AND data >= '" + tffDataDe.getText() + "' ";
            if (!tffDataAte.getText().trim().equals("/  /")) {
                add = "AND data BETWEEN '" + tffDataDe.getText() + "' AND '" + tffDataAte.getText() + "' ";
            }
            dml += add;
        } else if (!tffDataAte.getText().trim().equals("/  /")) {
            String add = "AND data =< '" + tffDataAte.getText() + "' ";
            dml += add;
        }

        return dml + "ORDER BY data;";
    }

    private void popularTabelaPedidos() {
        alterarBotoesEditar(false);
        pedidos = new PedidoDAO().consultar(criarFiltroPedidos());

        Object[] cabecalho = {
            "ID",
            "Data",
            "Valor Total",
            "Cliente"
        };

        DefaultTableModel model = new DefaultTableModel(cabecalho, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (Pedido pedido : pedidos) {
            int id = pedido.getId();
            String data = pedido.getData();
            String valorTotal = Formatacao.formatarCasasDecimais(pedido.getValorTotal(), 2);
            String nomeCliente = new ClienteDAO().consultarId(pedido.getIdCliente()).getNome();

            Object[] row = {
                id,
                data,
                valorTotal,
                nomeCliente
            };

            model.addRow(row);
        }

        tblPedidos.setModel(model);
        tblPedidos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    private void limparTabelaItensPedido() {
        DefaultTableModel model = (DefaultTableModel) tblItensCadastrados.getModel();

        model.setRowCount(0);

        tblItensCadastrados.setModel(model);
    }

    public void setFocus(int index) {
        tbpPrincipal.setSelectedIndex(index);
        alterarBotoes();
    }

    private Integer itemJaCadastrado(int idProduto) {
        for (int i = 0; i < listaProdutos.size(); i++) {
            ItemPedido tempItem = listaProdutos.get(i);
            if (idProduto == tempItem.getIdProduto()) {
                return i;
            }
        }
        return -1;
    }

    private boolean salvarLista() {
        boolean salvar = true;
        for (ItemPedido tempItem : listaProdutos) {
            if (new ItemPedidoDAO().salvar(tempItem) != null) {
                salvar = false;
            }
        }
        return salvar;
    }

    private boolean atualizarLista() {
        boolean atualizar = true;
        if (new ItemPedidoDAO().excluir(idPedido) == null) {
            atualizar = salvarLista();
        } else {
            atualizar = false;
        }
        return atualizar;
    }

    private boolean finalizarPedido() {
        Pedido tempPedido = new PedidoDAO().consultarId(idPedido);
        tempPedido.setData(tffDataPedido.getText());
        tempPedido.setIdCliente(cliente.getId());
        tempPedido.setEndereco(tfdEndereco.getText());
        tempPedido.setIdCidade(((ComboItem) cmbCidade.getSelectedItem()).getId());
        tempPedido.setObservacao(tfdObservacao.getText());
        tempPedido.setValorTotal(valor);
        return new PedidoDAO().atualizar(tempPedido) == null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarItem;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCriarPedido;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarEndereco;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimparFiltros;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvarPedido;
    private javax.swing.JButton btnSelecionarCliente;
    private javax.swing.JButton btnSelecionarProduto;
    private javax.swing.JComboBox<String> cmbCidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblItensCadastrados;
    private javax.swing.JTable tblPedidos;
    private javax.swing.JTabbedPane tbpPrincipal;
    private javax.swing.JTextField tfdClienteNome;
    private javax.swing.JTextField tfdEndereco;
    private javax.swing.JTextField tfdNumPedido;
    private javax.swing.JTextField tfdObservacao;
    private javax.swing.JTextField tfdProduto;
    private javax.swing.JTextField tfdQuantidade;
    private javax.swing.JTextField tfdValorProduto;
    private javax.swing.JTextField tfdValorTotal;
    private javax.swing.JFormattedTextField tffDataAte;
    private javax.swing.JFormattedTextField tffDataDe;
    private javax.swing.JFormattedTextField tffDataPedido;
    // End of variables declaration//GEN-END:variables

    @Override
    public void definirValor(int idSelecionado, String itemPesquisa) {
        if (itemPesquisa.equals("cliente")) {
            if (idSelecionado > 0) {
                cliente = new ClienteDAO().consultarId(idSelecionado);
                imprimirCliente();

                if (pedidoSelecionado == null) {
                    btnCriarPedido.setEnabled(true);
                    btnEditarEndereco.setEnabled(true);
                }
            } else {
                btnCriarPedido.setEnabled(false);
            }
        } else if (itemPesquisa.equals("produto")) {
            if (idSelecionado > 0) {
                produto = new ProdutoDAO().consultarId(idSelecionado);

                imprimirProduto();

                btnAdicionarItem.setEnabled(true);
                tfdQuantidade.setEnabled(true);
            } else {
                btnAdicionarItem.setEnabled(false);
                tfdQuantidade.setEnabled(false);
            }
        }
    }

    private void imprimirCliente() {
        tfdClienteNome.setText(cliente.getNome());
        tfdEndereco.setText(cliente.getLogradouro());
        new CombosDAO().popularComboBox("cidade", cmbCidade);
        new CombosDAO().definirItemCombo(cmbCidade, cliente.getCidade());
    }

    private void imprimirProduto() {
        tfdProduto.setText(produto.getDescricao());
        tfdValorProduto.setText(Formatacao.formatarCasasDecimais(produto.getValor(), 2));
    }
}

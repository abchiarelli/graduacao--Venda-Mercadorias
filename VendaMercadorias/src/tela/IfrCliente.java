/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tela;

import dao.CidadeDAO;
import dao.ClienteDAO;
import entidade.Cidade;
import entidade.Cliente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author artur
 */
public class IfrCliente extends javax.swing.JInternalFrame {

    ArrayList<Cidade> cidades = new ArrayList<>();
    ArrayList<Cliente> clientes = new ArrayList<>();
    Cliente clienteSelecionado = null;

    /**
     * Creates new form IfrCliente
     */
    public IfrCliente() {
        initComponents();

        popularComboBoxCidades();
        popularTabela();

        alterarBotoes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TbpPrincipal = new javax.swing.JTabbedPane();
        PnlClienteLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblClientes = new javax.swing.JTable();
        TxtFiltroNome = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BtnLimparFiltro = new javax.swing.JButton();
        PnlClienteManutencao = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TxtNome = new javax.swing.JTextField();
        TxtCPF = new javax.swing.JFormattedTextField();
        TxtTelefone = new javax.swing.JFormattedTextField();
        TxtEmail = new javax.swing.JTextField();
        TxtLogradouro = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        CbbCidade = new javax.swing.JComboBox<>();
        BtnSalvar = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();
        BtnBuscar = new javax.swing.JButton();
        BtnAtualizar = new javax.swing.JButton();
        BtnExcluir = new javax.swing.JButton();

        setTitle("Cadastro: Clientes");

        TbpPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbpPrincipalMouseClicked(evt);
            }
        });

        TblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Cidade", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TblClientes);
        if (TblClientes.getColumnModel().getColumnCount() > 0) {
            TblClientes.getColumnModel().getColumn(0).setMinWidth(150);
            TblClientes.getColumnModel().getColumn(0).setPreferredWidth(200);
        }

        jLabel9.setText("Filtro por nome:");

        BtnLimparFiltro.setText("Limpar");
        BtnLimparFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimparFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PnlClienteListaLayout = new javax.swing.GroupLayout(PnlClienteLista);
        PnlClienteLista.setLayout(PnlClienteListaLayout);
        PnlClienteListaLayout.setHorizontalGroup(
            PnlClienteListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlClienteListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlClienteListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .addGroup(PnlClienteListaLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtFiltroNome, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnLimparFiltro)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PnlClienteListaLayout.setVerticalGroup(
            PnlClienteListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlClienteListaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlClienteListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TxtFiltroNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(BtnLimparFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        TbpPrincipal.addTab("Listagem", PnlClienteLista);

        jLabel2.setText("Nome:");

        jLabel3.setText("e-mail:");

        jLabel4.setText("Telefone:");

        jLabel5.setText("CPF:");

        jLabel6.setText("Logradouro:");

        jLabel7.setText("Cidade:");

        try {
            TxtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            TxtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) # ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout PnlClienteManutencaoLayout = new javax.swing.GroupLayout(PnlClienteManutencao);
        PnlClienteManutencao.setLayout(PnlClienteManutencaoLayout);
        PnlClienteManutencaoLayout.setHorizontalGroup(
            PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlClienteManutencaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlClienteManutencaoLayout.createSequentialGroup()
                        .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(PnlClienteManutencaoLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(PnlClienteManutencaoLayout.createSequentialGroup()
                                        .addComponent(TxtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TxtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(TxtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                                    .addComponent(TxtEmail))))
                        .addGap(108, 108, 108))
                    .addGroup(PnlClienteManutencaoLayout.createSequentialGroup()
                        .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CbbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PnlClienteManutencaoLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TxtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        PnlClienteManutencaoLayout.setVerticalGroup(
            PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlClienteManutencaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TxtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TxtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(TxtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TxtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(CbbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PnlClienteManutencaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(TxtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        TbpPrincipal.addTab("Manutenção", PnlClienteManutencao);

        BtnSalvar.setText("Salvar");
        BtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalvarActionPerformed(evt);
            }
        });

        BtnCancelar.setText("Cancelar");
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });

        BtnBuscar.setText("Buscar");
        BtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarActionPerformed(evt);
            }
        });

        BtnAtualizar.setText("Atualizar");
        BtnAtualizar.setEnabled(false);
        BtnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAtualizarActionPerformed(evt);
            }
        });

        BtnExcluir.setText("Excluir");
        BtnExcluir.setEnabled(false);
        BtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TbpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(BtnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnSalvar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TbpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSalvar)
                    .addComponent(BtnCancelar)
                    .addComponent(BtnBuscar)
                    .addComponent(BtnAtualizar)
                    .addComponent(BtnExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_BtnCancelarActionPerformed

    private void BtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalvarActionPerformed
        if (CbbCidade.getSelectedIndex() > 0) {

            salvar();

        } else {
            JOptionPane.showMessageDialog(this, "Você deve selecionar uma cidade da lista.");
        }

    }//GEN-LAST:event_BtnSalvarActionPerformed

    private void TbpPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbpPrincipalMouseClicked
        alterarBotoes();

        if (TbpPrincipal.getSelectedIndex() == 0) {
            limparRegistro();
            clienteSelecionado = null;
        }
    }//GEN-LAST:event_TbpPrincipalMouseClicked

    private void BtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarActionPerformed
        popularTabela();
    }//GEN-LAST:event_BtnBuscarActionPerformed

    private void BtnLimparFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimparFiltroActionPerformed
        TxtFiltroNome.setText("");
        popularTabela();
    }//GEN-LAST:event_BtnLimparFiltroActionPerformed

    private void TblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblClientesMouseClicked
        alterarBotoesUpdate(TblClientes.getSelectedRow() > -1);
    }//GEN-LAST:event_TblClientesMouseClicked

    private void BtnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAtualizarActionPerformed
        clienteSelecionado = new ClienteDAO().consultarId(clientes.get(TblClientes.getSelectedRow()).getId());

        preencherRegistro();

        TbpPrincipal.setSelectedIndex(1);

        alterarBotoesUpdate(false);
        alterarBotoes();
    }//GEN-LAST:event_BtnAtualizarActionPerformed

    private void BtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExcluirActionPerformed
        if(new ClienteDAO().excluir(clientes.get(TblClientes.getSelectedRow()).getId()) == null) {
            JOptionPane.showMessageDialog(this, "Cliente Excluido com sucesso!");
            popularTabela();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao Excluir Cliente");
        }
    }//GEN-LAST:event_BtnExcluirActionPerformed

    private void salvar() {
        Cliente cliente = criarCliente();

        ClienteDAO clienteDAO = new ClienteDAO();
        if (clienteSelecionado == null) {
            if (clienteDAO.salvar(cliente) == null) {
                limparRegistro();
                popularTabela();
                JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao acadastrar Cliente.");
            }
        } else {
            if (clienteDAO.atualizar(cliente) == null) {
                limparRegistro();
                popularTabela();
                JOptionPane.showMessageDialog(this, "Cliente alterado com sucesso!");
                clienteSelecionado = null;
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao alterar Cliente.");
            }

        }
    }

    private Cliente criarCliente() {
        String nome = TxtNome.getText();
        String email = TxtEmail.getText();
        String cpf = TxtCPF.getText();
        String telefone = TxtTelefone.getText();
        String logradouro = TxtLogradouro.getText();
        int idCidade = cidades.get(CbbCidade.getSelectedIndex() - 1).getId();

        if (clienteSelecionado == null) {
            return new Cliente(nome, email, cpf, telefone, logradouro, idCidade);

        } else {
            return new Cliente(clienteSelecionado.getId(), nome, email, cpf, telefone, logradouro, idCidade);
        }
    }

    private void limparRegistro() {
        TxtNome.setText("");
        TxtEmail.setText("");
        TxtCPF.setText("");
        TxtTelefone.setText("");
        TxtLogradouro.setText("");
        CbbCidade.setSelectedIndex(0);

        TxtNome.requestFocus();
    }

    private void preencherRegistro() {
        TxtNome.setText(clienteSelecionado.getNome());
        TxtEmail.setText(clienteSelecionado.getEmail());
        TxtCPF.setText(clienteSelecionado.getCpf());
        TxtTelefone.setText(clienteSelecionado.getTelefone());
        TxtLogradouro.setText(clienteSelecionado.getLogradouro());
        CbbCidade.setSelectedIndex(posicaoCidadeArray(clienteSelecionado.getCidade()) + 1);

        TxtNome.requestFocus();
    }

    private void popularComboBoxCidades() {
        CbbCidade.removeAllItems();

        popularArrayCidades();

        CbbCidade.addItem("--- Selecione a Cidade ---");
        for (Cidade cidade : cidades) {
            CbbCidade.addItem(cidade.getNome());
        }
    }

    private void alterarBotoes() {
        BtnBuscar.setEnabled(TbpPrincipal.getSelectedIndex() == 0);
        BtnSalvar.setEnabled(TbpPrincipal.getSelectedIndex() == 1);
    }

    private void popularTabela() {
        alterarBotoesUpdate(false);
        popularArrayClientes();

        Object[] cabecalho = {"Nome", "Cidade", "Telefone"};

        DefaultTableModel model = new DefaultTableModel(cabecalho, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        CidadeDAO cidadeDAO = new CidadeDAO();

        for (Cliente cliente : clientes) {
            String nome = cliente.getNome();
            String cidade = cidadeDAO.consultarId(cliente.getCidade()).getNome();
            String telefone = cliente.getTelefone();

            String[] row = {nome, cidade, telefone};

            model.addRow(row);
        }

        TblClientes.setModel(model);

        TableColumn coluna = null;

        for (int i = 0; i < TblClientes.getColumnCount(); i++) {
            coluna = TblClientes.getColumnModel().getColumn(i);
            coluna.setResizable(false);

            switch (i) {
                case 0:
                    coluna.setPreferredWidth(200);
                    break;
                case 1:
                    coluna.setPreferredWidth(100);
                    break;
                case 2:
                    coluna.setPreferredWidth(50);
                    break;
            }
        }
    }

    private void popularArrayClientes() {
        ClienteDAO clienteDAO = new ClienteDAO();

        if (TxtFiltroNome.getText().length() > 0) {
            String DML = "SELECT * FROM cliente "
                    + "WHERE nome ILIKE '%" + TxtFiltroNome.getText() + "%'"
                    + "ORDER BY nome;";

            clientes = clienteDAO.consultar(DML);
        } else {
            clientes = clienteDAO.consultarTodos();
        }

    }

    private void popularArrayCidades() {
        CidadeDAO cidadeDAO = new CidadeDAO();
        cidades = cidadeDAO.consultarTodos();
    }

    private void alterarBotoesUpdate(boolean setTo) {
        BtnAtualizar.setEnabled(setTo);
        BtnExcluir.setEnabled(setTo);
    }

    private int posicaoCidadeArray(int id) {
        for (int i = 0; i < 10; i++) {
            if (cidades.get(i).getId() == id) {
                System.out.println("Posicao Array: " + i);
                System.out.println("Cidade: " + cidades.get(i).getNome());
                return i;
            }
        }
        return -1;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAtualizar;
    private javax.swing.JButton BtnBuscar;
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JButton BtnExcluir;
    private javax.swing.JButton BtnLimparFiltro;
    private javax.swing.JButton BtnSalvar;
    private javax.swing.JComboBox<String> CbbCidade;
    private javax.swing.JPanel PnlClienteLista;
    private javax.swing.JPanel PnlClienteManutencao;
    private javax.swing.JTable TblClientes;
    private javax.swing.JTabbedPane TbpPrincipal;
    private javax.swing.JFormattedTextField TxtCPF;
    private javax.swing.JTextField TxtEmail;
    private javax.swing.JTextField TxtFiltroNome;
    private javax.swing.JTextField TxtLogradouro;
    private javax.swing.JTextField TxtNome;
    private javax.swing.JFormattedTextField TxtTelefone;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}

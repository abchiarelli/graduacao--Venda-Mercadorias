/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package tela;

import apoio.Automatizar;
import apoio.Formatacao;
import apoio.IItemPesquisa;
import dao.CompraDAO;
import dao.FornecedorDAO;
import dao.ItemCompraDAO;
import dao.ProdutoDAO;
import entidade.Compra;
import entidade.Fornecedor;
import entidade.ItemCompra;
import entidade.Produto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author artur
 */
public class IfrCompra extends javax.swing.JInternalFrame implements IItemPesquisa {

    int idCompra = 0;
    double valor = 0.00;

    ArrayList<ItemCompra> listaCompra = new ArrayList<>();

    ArrayList<Compra> compras = new ArrayList<>();

    Fornecedor fornecedorSelecionado = null;
    Produto produtoSelecionado = null;
    Compra compraSelecionada = null;

    /**
     * Creates new form frmCompra
     */
    public IfrCompra() {
        initComponents();

        Formatacao.formatarData(tffDataDe);
        Formatacao.formatarData(tffDataAte);
        Formatacao.formatarData(tffDataCompra);
        Formatacao.formatarCnpj(tffCnpj);

        tffDataCompra.setText(Formatacao.getDataAtual());

        popularTabelaCompras();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        tbpPrincipal = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCompras = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tffDataDe = new javax.swing.JFormattedTextField();
        tffDataAte = new javax.swing.JFormattedTextField();
        btnLimparBusca = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfdCodCompra = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tffDataCompra = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        tfdFornecedorNome = new javax.swing.JTextField();
        btnSelecionarFornecedor = new javax.swing.JButton();
        btnCriarCompra = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        Produto = new javax.swing.JLabel();
        tfdProdutoDescricao = new javax.swing.JTextField();
        btnSelecionarProduto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblLista = new javax.swing.JTable();
        btnRemoverSelecionado = new javax.swing.JButton();
        tfdValorTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfdValorProduto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfdQuantidade = new javax.swing.JTextField();
        btnAdicionarItem = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        tffCnpj = new javax.swing.JFormattedTextField();
        btnFechar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        tbpPrincipal.setEnabled(false);
        tbpPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbpPrincipalMouseClicked(evt);
            }
        });

        tblCompras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblComprasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCompras);

        jLabel1.setText("Data De:");

        jLabel2.setText("Data Até:");

        btnLimparBusca.setText("Limpar");
        btnLimparBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparBuscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tffDataDe, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tffDataAte, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimparBusca)
                .addGap(145, 145, 145))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(tffDataAte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLimparBusca))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(tffDataDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(229, Short.MAX_VALUE))
        );

        tbpPrincipal.addTab("Listagem", jPanel1);

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setText("Nº Compra:");

        tfdCodCompra.setEnabled(false);

        jLabel4.setText("Data:");

        jLabel5.setText("Fornecedor:");

        tfdFornecedorNome.setEnabled(false);

        btnSelecionarFornecedor.setText("Selecionar");
        btnSelecionarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarFornecedorActionPerformed(evt);
            }
        });

        btnCriarCompra.setText("Criar Compra");
        btnCriarCompra.setEnabled(false);
        btnCriarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarCompraActionPerformed(evt);
            }
        });

        Produto.setText("Produto:");

        tfdProdutoDescricao.setEnabled(false);

        btnSelecionarProduto.setText("Selecionar");
        btnSelecionarProduto.setEnabled(false);
        btnSelecionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarProdutoActionPerformed(evt);
            }
        });

        tblLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblLista);

        btnRemoverSelecionado.setText("Remover Selecionado");
        btnRemoverSelecionado.setEnabled(false);

        tfdValorTotal.setEnabled(false);

        jLabel6.setText("Valor Total:");

        jLabel7.setText("Valor Produto:");

        tfdValorProduto.setEnabled(false);

        jLabel8.setText("Quantidade:");

        btnAdicionarItem.setText("Adicionar Item");
        btnAdicionarItem.setEnabled(false);
        btnAdicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItemActionPerformed(evt);
            }
        });

        jLabel9.setText("CNPJ:");

        tffCnpj.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdCodCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tffDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCriarCompra)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(tfdFornecedorNome, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnSelecionarFornecedor))
                                            .addComponent(tffCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Produto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdProdutoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSelecionarProduto)))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnRemoverSelecionado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfdValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfdValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdicionarItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfdCodCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tffDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfdFornecedorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarFornecedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tffCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCriarCompra)
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Produto)
                    .addComponent(tfdProdutoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfdValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(tfdQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoverSelecionado)
                    .addComponent(tfdValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        tbpPrincipal.addTab("Manutenção", jPanel2);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbpPrincipal)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFechar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tbpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFechar)
                    .addComponent(btnSalvar)
                    .addComponent(btnBuscar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparBuscaActionPerformed
        tffDataDe.setText("");
        tffDataAte.setText("");
        popularTabelaCompras();
    }//GEN-LAST:event_btnLimparBuscaActionPerformed

    private void btnSelecionarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarFornecedorActionPerformed
        DlgLocalizar dlgLocalizar = new DlgLocalizar(null, true, this, "fornecedor");
        dlgLocalizar.setVisible(true);
    }//GEN-LAST:event_btnSelecionarFornecedorActionPerformed

    private void btnCriarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarCompraActionPerformed
        if (Automatizar.data(tffDataCompra, false)) {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            Compra compra = new Compra(tffDataCompra.getText(), valor, fornecedorSelecionado.getId());
            String codCompra = new CompraDAO().salvar(compra);
            if (codCompra.contains("ERROR")) {
                JOptionPane.showMessageDialog(this, "Erro ao criar Compra!");
            } else {
                idCompra = Integer.parseInt(codCompra);
                tfdCodCompra.setText(String.valueOf(idCompra));
                btnSelecionarProduto.setEnabled(true);
                btnCriarCompra.setEnabled(false);
//                btnSelecionarFornecedor.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnCriarCompraActionPerformed

    private void btnAdicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItemActionPerformed
        if (Automatizar.valorDecimal(tfdQuantidade, false)) {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            double tempQuantidade = Double.parseDouble(tfdQuantidade.getText().replace(',', '.'));
            int itemIndex = itemJaCadastrado(produtoSelecionado.getId());
            if (itemIndex >= 0) {
                ItemCompra tempItem = listaCompra.get(itemIndex);
                tempItem.setQuantidade(tempItem.getQuantidade() + tempQuantidade);
                listaCompra.set(itemIndex, tempItem);
                valor += Double.parseDouble(Formatacao.formatarCasasDecimais(tempItem.getValor() * tempQuantidade, 2).replace(',', '.'));
            } else {
                ItemCompra tempItem = new ItemCompra(produtoSelecionado.getId(), idCompra, tempQuantidade, produtoSelecionado.getValor());
                listaCompra.add(tempItem);
                valor += Double.parseDouble(Formatacao.formatarCasasDecimais(tempItem.getValor() * tempItem.getQuantidade(), 2).replace(',', '.'));
            }

            tfdValorTotal.setText("R$ " + String.valueOf(valor).replace('.', ','));
            limparProduto();
            popularTabelaListaCompra();
            btnAdicionarItem.setEnabled(false);
        }
    }//GEN-LAST:event_btnAdicionarItemActionPerformed

    private void limparProduto() {
        tfdProdutoDescricao.setText("");
        tfdValorProduto.setText("");
        tfdQuantidade.setText("");
        tfdQuantidade.setBackground(Formatacao.colorNeutral());
        produtoSelecionado = null;
    }

    private void limparCadastro() {
        idCompra = 0;
        valor = 0.00;
        listaCompra.clear();
        compraSelecionada = null;

        tfdCodCompra.setText("");
        tffDataCompra.setText(Formatacao.getDataAtual());
        tffDataCompra.setBackground(Formatacao.colorNeutral());

        btnSelecionarFornecedor.setEnabled(true);
        fornecedorSelecionado = null;
        tfdFornecedorNome.setText("");
        tffCnpj.setText("");
        btnCriarCompra.setEnabled(false);

        limparProduto();
        popularTabelaListaCompra();
        btnSelecionarProduto.setEnabled(false);

        tfdValorTotal.setText(String.valueOf(valor));
    }

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        if (compraSelecionada == null) {
            if (idCompra == 0) {
                this.dispose();
            } else {
                if (JOptionPane.showConfirmDialog(this, "Fechar irá excluir a compra em andamento.\n\nRealmente deseja continuar?\n", "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
                    if (new CompraDAO().excluir(idCompra) == null) {
                        JOptionPane.showMessageDialog(this, Formatacao.mensagemExclusaoSucess("Compra"));
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, Formatacao.mensagemExclusaoError("Compra"));
                    }
                }
            }
        } else {
            if (JOptionPane.showConfirmDialog(this, "Fechar não salvará as alterações feitas na compra.\n\nRealmente deseja continuar?\n", "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnSelecionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarProdutoActionPerformed
        new DlgLocalizar(null, true, this, "produto").setVisible(true);
    }//GEN-LAST:event_btnSelecionarProdutoActionPerformed

    private void tblListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaMouseClicked
        btnRemoverSelecionado.setEnabled(tblLista.getSelectedRow() >= 0);
    }//GEN-LAST:event_tblListaMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (Automatizar.data(tffDataCompra, false)) {
            JOptionPane.showConfirmDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            if (compraSelecionada != null) {
                if (atualizarLista() && finalizarCompra()) {
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemAtualizarSucess("Compra"));
                    limparCadastro();
                    popularTabelaCompras();
                    tbpPrincipal.setSelectedIndex(0);
                    alterarBotoes();
                } else {
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemAtualizarError("Compra"));
                }
            } else {
                if (salvarLista() && finalizarCompra()) {
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemSalvarSucess("Compra"));
                    limparCadastro();
                    popularTabelaCompras();
                    tbpPrincipal.setSelectedIndex(0);
                    alterarBotoes();
                } else {
                    JOptionPane.showMessageDialog(this, Formatacao.mensagemSalvarError("Compra"));
                }
            }
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (Automatizar.data(tffDataDe, true) || Automatizar.data(tffDataAte, true)) {
            JOptionPane.showMessageDialog(this, Formatacao.mensagemErroPreenchimento());
        } else {
            popularTabelaCompras();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tblComprasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblComprasMouseClicked
        if (tblCompras.getSelectedRow() >= 0) {
            alterarBotoesEdicao(true);
        }
    }//GEN-LAST:event_tblComprasMouseClicked

    private void tbpPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbpPrincipalMouseClicked
        switch (tbpPrincipal.getSelectedIndex()) {
            case 0:
                limparCadastro();
                break;
            case 1:
                alterarBotoesEdicao(false);
                break;
        }
        alterarBotoes();
    }//GEN-LAST:event_tbpPrincipalMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        compraSelecionada = compras.get(tblCompras.getSelectedRow());
        imprimirCompraSelecionada();
        tbpPrincipal.setSelectedIndex(1);
        alterarBotoes();
        alterarBotoesEdicao(false);
        btnSelecionarProduto.setEnabled(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        Compra tempCompra = compras.get(tblCompras.getSelectedRow());
        if (JOptionPane.showConfirmDialog(this, Formatacao.mensagemConfirmacaoExclusao("Compra"), "Confirmação", JOptionPane.YES_NO_OPTION) == 0) {
            if (new ItemCompraDAO().excluir(tempCompra.getId()) == null
                    && new CompraDAO().excluir(tempCompra.getId()) == null) {
                popularTabelaCompras();
                JOptionPane.showMessageDialog(this, Formatacao.mensagemExclusaoSucess("Compra"));
            } else {
                JOptionPane.showMessageDialog(this, Formatacao.mensagemExclusaoError("Compra"));
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void popularTabelaListaCompra() {
        Object[] cabecalho = {
            "Produto",
            "Valor",
            "QTD."
        };

        DefaultTableModel model = new DefaultTableModel(cabecalho, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (ItemCompra tempItem : listaCompra) {
            String tempProduto = new ProdutoDAO().consultarId(tempItem.getIdProduto()).getDescricao();
            String tempValor = "R$ " + Formatacao.formatarCasasDecimais(tempItem.getValor(), 2).replace('.', ',');
            String qtd = Formatacao.formatarCasasDecimais(tempItem.getQuantidade(), 3).replace('.', ',');

            Object[] row = {
                tempProduto,
                tempValor,
                qtd
            };

            model.addRow(row);
        }

        tblLista.setModel(model);
        tblLista.setSelectionMode(0);

        btnSalvar.setEnabled(tblLista.getRowCount() > 0);
        btnRemoverSelecionado.setEnabled(tblLista.getSelectedRow() >= 0);
    }

    public void setFocus(int index) {
        tbpPrincipal.setSelectedIndex(index);
    }

    private Integer itemJaCadastrado(int idProduto) {
        for (int i = 0; i < listaCompra.size(); i++) {
            ItemCompra tempItem = listaCompra.get(i);
            if (idProduto == tempItem.getIdProduto()) {
                return i;
            }
        }
        return -1;
    }

    private boolean finalizarCompra() {
        Compra tempCompra = new CompraDAO().consultarId(idCompra);

        String tempDataCompra = tffDataCompra.getText();
        double tempValor = valor;
        int tempIdFornecedor = fornecedorSelecionado.getId();

        tempCompra.setData(tempDataCompra);
        tempCompra.setValor(tempValor);
        tempCompra.setIdFornecedor(tempIdFornecedor);

        return new CompraDAO().atualizar(tempCompra) == null;
    }

    private boolean salvarLista() {
        boolean salvar = true;

        for (ItemCompra tempItem : listaCompra) {
            if (new ItemCompraDAO().salvar(tempItem) != null) {
                salvar = false;
            }
        }

        return salvar;
    }

    private boolean atualizarLista() {
        boolean salvar = true;

        if (new ItemCompraDAO().excluir(idCompra) == null) {
            salvar = salvarLista();
        } else {
            salvar = false;
        }

        return salvar;
    }

    private void alterarBotoes() {
        if (tbpPrincipal.getSelectedIndex() == 0) {
            btnSalvar.setEnabled(false);
        }
        btnBuscar.setEnabled(tbpPrincipal.getSelectedIndex() == 0);
    }

    private void popularTabelaCompras() {
        compras = new CompraDAO().consultar(criarFiltro());

        Object[] cabecalho = {
            "ID",
            "Data",
            "Valor",
            "Fornecedor"
        };

        DefaultTableModel model = new DefaultTableModel(cabecalho, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (Compra compra : compras) {
            Object[] row = {
                compra.getId(),
                compra.getData(),
                Formatacao.formatarCasasDecimais(compra.getValor(), 2).replace('.', ','),
                new FornecedorDAO().consultarId(compra.getIdFornecedor()).getNome()
            };

            model.addRow(row);
        }

        tblCompras.setModel(model);
        tblCompras.setSelectionMode(0);
    }

    private String criarFiltro() {
        String dml = "SELECT * FROM compra WHERE ID IS NOT NULL ";

        if (!tffDataDe.getText().trim().equals("/  /")) {
            String add = "AND data_compra >= '" + tffDataDe.getText() + "' ";

            if (!tffDataAte.getText().trim().equals("/  /")) {
                add = "AND data_compra BETWEEN '" + tffDataDe.getText() + "' AND '" + tffDataAte.getText() + "' ";
            }

            dml += add;
        } else if (!tffDataAte.getText().trim().equals("/  /")) {
            String add = "AND data_compra <= '" + tffDataAte.getText() + "' ";
            dml += add;
        }

        return dml + "ORDER BY data_compra";
    }

    private void alterarBotoesEdicao(boolean setTo) {
        btnEditar.setEnabled(setTo);
        btnExcluir.setEnabled(setTo);
    }

    private void imprimirCompraSelecionada() {
        idCompra = compraSelecionada.getId();
        listaCompra = new ItemCompraDAO().consultarTodos(idCompra);
        fornecedorSelecionado = new FornecedorDAO().consultarId(compraSelecionada.getIdFornecedor());
        valor = compraSelecionada.getValor();

        tfdCodCompra.setText(String.valueOf(idCompra));
        tffDataCompra.setText(compraSelecionada.getData());

        tfdFornecedorNome.setText(fornecedorSelecionado.getNome());
        tffCnpj.setText(fornecedorSelecionado.getCnpj());
        
        tfdValorTotal.setText("R$ " + Formatacao.formatarCasasDecimais(valor, 2).replace('.', ','));

        popularTabelaListaCompra();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Produto;
    private javax.swing.JButton btnAdicionarItem;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCriarCompra;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnLimparBusca;
    private javax.swing.JButton btnRemoverSelecionado;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSelecionarFornecedor;
    private javax.swing.JButton btnSelecionarProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable tblCompras;
    private javax.swing.JTable tblLista;
    private javax.swing.JTabbedPane tbpPrincipal;
    private javax.swing.JTextField tfdCodCompra;
    private javax.swing.JTextField tfdFornecedorNome;
    private javax.swing.JTextField tfdProdutoDescricao;
    private javax.swing.JTextField tfdQuantidade;
    private javax.swing.JTextField tfdValorProduto;
    private javax.swing.JTextField tfdValorTotal;
    private javax.swing.JFormattedTextField tffCnpj;
    private javax.swing.JFormattedTextField tffDataAte;
    private javax.swing.JFormattedTextField tffDataCompra;
    private javax.swing.JFormattedTextField tffDataDe;
    // End of variables declaration//GEN-END:variables

    @Override
    public void definirValor(int idSelecionado, String itemPesquisa) {
        switch (itemPesquisa) {
            case "fornecedor":
                fornecedorSelecionado = new FornecedorDAO().consultarId(idSelecionado);
                imprimeFornecedor();
                if (idCompra == 0) {
                    btnCriarCompra.setEnabled(true);
                }
                break;
            case "produto":
                this.produtoSelecionado = new ProdutoDAO().consultarId(idSelecionado);
                imprimeProduto();
                btnAdicionarItem.setEnabled(true);
        }
    }

    private void imprimeFornecedor() {
        tfdFornecedorNome.setText(fornecedorSelecionado.getNome());
        tffCnpj.setText(fornecedorSelecionado.getCnpj());
    }

    private void imprimeProduto() {
        tfdProdutoDescricao.setText(produtoSelecionado.getDescricao());
        tfdValorProduto.setText(Formatacao.formatarCasasDecimais(produtoSelecionado.getValor(), 2).replace('.', ','));
    }
}
